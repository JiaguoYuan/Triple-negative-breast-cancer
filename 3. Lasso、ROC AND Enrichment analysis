setwd("D:\\研一\\珊姐\\5000块\\yuan5000\\Lasso")
library(dplyr)
library(tidyverse)
set <- read.csv("D:\\研一\\珊姐\\5000块\\yuan5000\\差异分析\\set.csv",sep=",",row.names = 1)
group <- read.csv("D:\\研一\\珊姐\\5000块\\yuan5000\\差异分析\\5000_group.csv",sep=",")

#1.1 
A <- c("FOXM1","EZH2","ASPM","ANLN","NUF2","NDC80")
exp <- set[A,] %>% t() %>% as.data.frame() %>% mutate(.,Class=group$Class)

#1.2
exp$Class<- ifelse(exp$Class=="TNBC",1,0)

#1.3 Set outcome variables
library("glmnet")
y <- as.matrix(exp$Class)
x <- as.matrix(exp[,1:6])

#1.4.binomial 
set.seed(12345)
lasso_model <- glmnet(x,y,family="binomial",alpha=1)
print(lasso_model)
#4.可视化 s= 选择lambda 大小
plot(lasso_model,
     xvar = "lambda",
     label=F)

# Run cross-validation & select lambda
mod_cv <- cv.glmnet(x=x, y=y, family="binomial", # 默认nfolds = 10
                    nfolds = 10, alpha=1)
plot(mod_cv) 

lamabdamin <- mod_cv$lambda.min
lamabdalse <- mod_cv$lambda.1se
coef_lasso <- coef(lasso_model,s=0.004807645)
coef_lasso

#1.5
exp(coef_lasso)
coef_lasso <- coef_lasso %>% as.matrix() %>% as.data.frame()
coef_lasso$OR <-exp(coef_lasso$s1)

lasso <- filter(coef_lasso,OR!=1) %>% .[-1,]
lasso_exp <- set[rownames(lasso),]

#2.ROC
#1.构建矩阵
exp <- set[A,] %>% t() %>% as.data.frame() %>% mutate(.,Class=group$Class) %>% .[,-2])
library(pROC)
library(ggplot2)
IL36G_t <- exp 
rocobj <- roc(IL36G_t[,6], IL36G_t[,4],
              smooth = F, levels=c("N_TNBC","TNBC")    
auc<-auc(rocobj)[1]
ggroc(rocobj,
      color="red",
      size=1,
      legacy.axes = TRUE)+
  theme_bw()+
  geom_segment(aes(x = 0, y = 0, xend = 1, yend = 1),       
               colour='grey', 
               linetype = 'dotdash',size=1)+theme(
                 axis.title.x = element_text(hjust = 0.5))+annotate("text",x=0.75,y=0.25,label=paste("AUC = ", round(auc,2)),size=6)+ggtitle(colnames(IL36G_t)[4]) +#修改
  theme(plot.title = element_text(hjust = 0.5))

#3.Enrichment analysis
#3.1
library(clusterProfiler)
library(org.Hs.eg.db)
keytypes(org.Hs.eg.db)
EntrezID<-mapIds(x <-org.Hs.eg.db,keys = con$CTRC,keytype = "SYMBOL",column = "ENTREZID") %>% as.data.frame(.) %>% na.omit
colnames(EntrezID)<-c("ENTREZID")
head(EntrezID)

CTCF <- read.csv("CTCF.csv",sep=",",row.names = 1) 
colnames(CTCF)<-c("ENTREZID")

#3.2 KEGG
KK <- enrichKEGG(gene = CTCF$ENTREZID,keyType = "kegg",organism = "Mm",pvalueCutoff = 0.05,qvalueCutoff = 0.5,pAdjustMethod = "none",use_internal_data=F)
KKK= data.frame(KK) %>% na.omit

cbind(EntrezID,KKK)
dotplot(KK)
barplot(KK)
write.xlsx(KKK,"Post_Pre_KEGG_rusult.xlsx")

#3.3 Go
Go <- enrichGO(gene = CTCF$ENTREZID,keyType = "ENTREZID",OrgDb = org.Mm.eg.db,pvalueCutoff = 0.05,qvalueCutoff = 0.1, ont ="ALL")
Goo= data.frame(Go) %>% na.omit
dotplot(Go)
barplot(Go)
write.xlsx(diss,"Post_Pre_limma_diss.xlsx",rowNames=T)
write.xlsx(Goo,"Post_Pre_Go_rusult.xlsx")

