rm(list=ls())
setwd("D:\\研一\\珊姐\\5000块\\yuan5000\\WGCNA")

library(dplyr)
library(tidyverse)
library(openxlsx)

#1.Input
set <- read.csv("D:\\研一\\珊姐\\5000块\\yuan5000\\差异分析\\set.csv",sep=",",row.names = 1)
group <- read.csv("D:\\研一\\珊姐\\5000块\\yuan5000\\差异分析\\5000_group.csv",sep=",")
rownames(group) <- group$X
# library(edgeR)
# CPM_AD <- cpm(AD) %>% as.data.frame()
# exp <- log(CPM_AD+1)

#2.WGCNA
library(WGCNA)
options(stringsAsFactors = FALSE)
#1.2.1.Data preparation
exp <- t(set) %>% as.data.frame()
# rownames(exp) <- AD_group$grou

#1.2.2 Check for deletions
gsa <- goodSamplesGenes(exp,verbose = 3)
gsa$allOK

#1.2.3 Check for outliers 
sampleTree = hclust(dist(exp), method = "average")
sizeGrWindow(12,9) 
par(cex = 0.6);
par(mar = c(0,4,2,0))
plot(sampleTree, main = "Sample clustering to detect outliers", sub="", xlab="", cex.lab = 1.5,
     cex.axis = 1.5, cex.main = 2)

abline(h = 130, col = "red") 
clust = cutreeStatic(sampleTree, cutHeight = 130, minSize = 10)
table(clust)   
keepSamples = (clust==1) 
exp = exp[keepSamples, ]  
nGenes = ncol(exp)
nSamples = nrow(exp)


#1.2.4 Group
group <- group[rownames(exp),]%>%.[,4] %>% as.data.frame() 
group <- mutate(group,class=recode(.,"TNBC"=1,"N_TNBC"=0))
groupp <- group[,-1] %>% as.data.frame()
rownames(groupp) <- rownames(exp)

#1.2.5 Phenotype is associated with the sample
sampleTree2 = hclust(dist(exp), method = "average")
traitColors = numbers2colors(groupp, signed = FALSE) 

plotDendroAndColors(sampleTree2, traitColors,
                    groupLabels = names(groupp),
                    main = "Sample dendrogram and trait heatmap")
#1.2.6 Build an expression network. Estimate soft thresholds
library(WGCNA)
options(stringsAsFactors = FALSE);
enableWGCNAThreads
powers = c(c(1:10), seq(from = 12, to=20, by=2))
sft = pickSoftThreshold(exp, powerVector = powers,verbose = 5,networkType = "signed")
sizeGrWindow(9, 5);
par(mfrow = c(1,2));
cex1 = 0.9;
plot(sft$fitIndices[,1], -sign(sft$fitIndices[,3])*sft$fitIndices[,2],
     xlab="Soft Threshold (power)",ylab="Scale Free Topology Model Fit,signed R^2",type="n",
     main = paste("Scale independence"));
text(sft$fitIndices[,1], -sign(sft$fitIndices[,3])*sft$fitIndices[,2],
     labels=powers,cex=cex1,col="red");
abline(h=0.9,col="red")
axis(side=2,at=0.9)
softPower =sft$powerEstimate
sft$powerEstimate
plot(sft$fitIndices[,1], sft$fitIndices[,5],
     xlab="Soft Threshold (power)",ylab="Mean Connectivity", type="n",
     main = paste("Mean connectivity"))
text(sft$fitIndices[,1], sft$fitIndices[,5], labels=powers, cex=cex1,col="red")

net = blockwiseModules(exp, power = 18,
                       TOMType = "signed", minModuleSize = 30,
                       reassignThreshold = 0, mergeCutHeight = 0.2,
                       numericLabels = TRUE, pamRespectsDendro = FALSE,
                       saveTOMs = TRUE,
                       saveTOMFileBase = "femaleMouseTOM",
                       verbose = 3)
table(net$colors) 
sizeGrWindow(12, 9)
mergedColors = labels2colors(net$colors)
plotDendroAndColors(net$dendrograms[[1]], mergedColors[net$blockGenes[[1]]],
                    "Module colors",
                    dendroLabels = FALSE, hang = 0.03,
                    addGuide = TRUE, guideHang = 0.05)
#1.2.7 Save
moduleLabels = net$colors
moduleColors = labels2colors(net$colors)
MEs = net$MEs;
geneTree = net$dendrograms[[1]];
save(MEs, moduleLabels, moduleColors, geneTree,
     file = "FemaleLiver-02-networkConstruction-auto.RData")

#1.2.8 Correlation
lnames = load(file = "FemaleLiver-02-networkConstruction-auto.RData")
nGenes = ncol(exp)
nSamples = nrow(exp)
MEs0 = moduleEigengenes(exp, moduleColors)$eigengenes
MEs = orderMEs(MEs0)
moduleTraitCor = cor(MEs, groupp, use = "p",method="spearman");
moduleTraitPvalue = corPvalueStudent(moduleTraitCor, nSamples)
sizeGrWindow(10,6)
textMatrix = paste(signif(moduleTraitCor, 2), "\n(",
                   signif(moduleTraitPvalue, 3), ")", sep = "");
dim(textMatrix) = dim(moduleTraitCor)
par(mar = c(6, 8.5, 3, 3))
labeledHeatmap(Matrix = moduleTraitCor,
               xLabels = names(groupp),
               yLabels = names(MEs),
               ySymbols = names(MEs),
               colorLabels = FALSE,
               colors = blueWhiteRed(50),
               textMatrix = textMatrix,
               setStdMargins = FALSE,
               cex.text = 0.5,
               zlim = c(-1,1),
               main = paste("Module-trait relationships"))


A<- colnames(exp)[moduleColors == "yellow"] %>% as.data.frame()
B<- colnames(exp)[moduleColors == "lightyellow"] %>% as.data.frame()
write.csv (A,"yellow.csv")
write.csv (B,"lightyellow.csv")


#3.Hub genes 

library(VennDiagram)
PPI <- read.csv("D:\\研一\\珊姐\\5000块\\yuan5000\\PPI和HUb\\cpm_con_DEG.csv",row.names=1,sep=",")
dev.off()
dev.new()
x<-list(WGCNA=A$., CytoHubba <-as.character(PPI$.))
names(x)[2]<- c("CytoHubba")

mm<- venn.diagram(x, filename = NULL, fill = c("#EDA1A4","#A4CB9E"),scaled=F, cat.cex = 1.5,cat.pos = c(180,180),cex = 1.5)
grid.draw(mm)

mm<- venn.diagram(x, filename = NULL, fill = c("#9DB4CE", "#F9C08A", "#EDA1A4", "#B3D8D5","#A4CB9E"),rotation.degree = 60)

library("dplyr")
bd <- Reduce(intersect,x) %>% as.data.frame()
write.csv(bd,file ="cpm_con_DEG.csv",row.names=T)
